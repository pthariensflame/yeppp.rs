/*
 *                       Yeppp! library implementation
 *                   This file is auto-generated by Peach-Py,
 *        Portable Efficient Assembly Code-generator in Higher-level Python,
 *                  part of the Yeppp! library infrastructure
 * This file is part of Yeppp! library and licensed under the New BSD license.
 * See LICENSE.txt for the full text of the license.
 */

#include <yepBuiltin.h>
#include <yepCore.h>


extern "C" YEP_LOCAL_SYMBOL YepStatus _yepCore_SumSquares_V32f_S32f_Default(const Yep32f *YEP_RESTRICT vPointer, Yep32f *YEP_RESTRICT sumSquaresPointer, YepSize length) {
	if YEP_UNLIKELY(vPointer == YEP_NULL_POINTER) {
		return YepStatusNullPointer;
	}
	if YEP_UNLIKELY(yepBuiltin_GetPointerMisalignment(vPointer, sizeof(Yep32f)) != 0) {
		return YepStatusMisalignedPointer;
	}
	if YEP_UNLIKELY(sumSquaresPointer == YEP_NULL_POINTER) {
		return YepStatusNullPointer;
	}
	if YEP_UNLIKELY(yepBuiltin_GetPointerMisalignment(sumSquaresPointer, sizeof(Yep32f)) != 0) {
		return YepStatusMisalignedPointer;
	}
	Yep32f sumSquares = Yep32f(0);
	while (length-- != 0) {
		const Yep32f v = *vPointer++;
		sumSquares += v * v;
	}
	*sumSquaresPointer = sumSquares;
	return YepStatusOk;
}

extern "C" YEP_LOCAL_SYMBOL YepStatus _yepCore_SumSquares_V64f_S64f_Default(const Yep64f *YEP_RESTRICT vPointer, Yep64f *YEP_RESTRICT sumSquaresPointer, YepSize length) {
	if YEP_UNLIKELY(vPointer == YEP_NULL_POINTER) {
		return YepStatusNullPointer;
	}
	if YEP_UNLIKELY(yepBuiltin_GetPointerMisalignment(vPointer, sizeof(Yep64f)) != 0) {
		return YepStatusMisalignedPointer;
	}
	if YEP_UNLIKELY(sumSquaresPointer == YEP_NULL_POINTER) {
		return YepStatusNullPointer;
	}
	if YEP_UNLIKELY(yepBuiltin_GetPointerMisalignment(sumSquaresPointer, sizeof(Yep64f)) != 0) {
		return YepStatusMisalignedPointer;
	}
	Yep64f sumSquares = Yep64f(0);
	while (length-- != 0) {
		const Yep64f v = *vPointer++;
		sumSquares += v * v;
	}
	*sumSquaresPointer = sumSquares;
	return YepStatusOk;
}
