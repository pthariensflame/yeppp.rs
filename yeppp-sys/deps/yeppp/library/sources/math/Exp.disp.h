/*
 *                       Yeppp! library implementation
 *                   This file is auto-generated by Peach-Py,
 *        Portable Efficient Assembly Code-generator in Higher-level Python,
 *                  part of the Yeppp! library infrastructure
 * This file is part of Yeppp! library and licensed under the New BSD license.
 * See LICENSE.txt for the full text of the license.
 */

#pragma once

#include <yepPredefines.h>
#include <yepTypes.h>
#include <yepPrivate.h>
#include <yepMath.h>
#include <library/functions.h>

extern "C" YEP_PRIVATE_SYMBOL const FunctionDescriptor<YepStatus (YEPABI*)(const Yep64f *YEP_RESTRICT, Yep64f *YEP_RESTRICT, YepSize)> _dispatchTable_yepMath_Exp_V64f_V64f[];

extern "C" YEP_PRIVATE_SYMBOL YepStatus (YEPABI* _yepMath_Exp_V64f_V64f)(const Yep64f *YEP_RESTRICT xPointer, Yep64f *YEP_RESTRICT yPointer, YepSize length);

inline static YepStatus _yepMath_Exp_Init() {
	*reinterpret_cast<FunctionPointer*>(&_yepMath_Exp_V64f_V64f) = _yepLibrary_InitFunction((const FunctionDescriptor<YepStatus (*)()>*)_dispatchTable_yepMath_Exp_V64f_V64f);
	return YepStatusOk;
}
